#####
# Uploads release artifacts for a given tag
# * Signs and uploads artifacts (jar, sources, javadoc) to sonatype staging (later synced to Maven Central)
# * Generates a changelog with Github issues and PRs for that specific version
# * Adds a Github release with the generated changelog and artifacts
# * Optionally publish to gradle plugin portal
#####

parameters:
  vmImage: 'ubuntu-20.04'
  jdkVersion: '1.11'
  plugin: 'false'
  docker: 'false'

jobs:
- job: UploadRelease
  pool:
    vmImage: ${{ parameters.vmImage }}
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: secring.gpg
  - task: Gradle@2
    displayName: Upload tagged release
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'publishToNexus closeAndReleaseRepository -x test'
      options: '--info --stacktrace'
    env:
      SIGNING_SECRET_KEY_RING_FILE: $(Agent.TempDirectory)/secring.gpg 
      SIGNING_PASSWORD: $(signing.password)
      SIGNING_KEY_ID: $(signing.keyId)
      OSSRH_USERNAME: $(ossrh.username)
      OSSRH_PASSWORD: $(ossrh.password)
      CI: true
  - ${{ if eq(parameters.plugin, 'true') }}:
    - task: Gradle@2
      displayName: Upload tagged plugin release
      inputs:
        gradleWrapperFile: 'gradlew'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: ${{ parameters.jdkVersion }}
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        tasks: 'publishPlugins -x test'
        options: '--info --stacktrace -Pgradle.publish.key=$(gradle.publish.key) -Pgradle.publish.secret=$(gradle.publish.secret)'
      env:
        SIGNING_SECRET_KEY_RING_FILE: $(Agent.TempDirectory)/secring.gpg
        SIGNING_PASSWORD: $(signing.password)
        SIGNING_KEY_ID: $(signing.keyId)
        CI: true
  - ${{ if eq(parameters.docker, 'true') }}:
    - task: Gradle@2
      displayName: Build docker image
      inputs:
        gradleWrapperFile: 'gradlew'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: ${{ parameters.jdkVersion }}
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        tasks: 'jibBuildTar -x test'
        options: '--info --image=bakdata/$(Build.Repository.Name):$(Build.SourceBranchName)'

    - script: docker load --input $(workingDirectory)/build/jib-image.tar
      displayName: Load image to docker

    - task: Docker@2
      displayName: Publish docker
      inputs:
        command: push
        repository: $(Build.Repository.Name)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(Build.SourceBranchName)
          latest
  - task: Gradle@2
    displayName: Create release changelog
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'generateChangelog'
      options: '-Pchangelog.releaseVersion=$(Build.SourceBranchName) -Pchangelog.sinceTag=$(Build.SourceBranchName) --stacktrace --info'
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'bot'
      repositoryName: '$(Build.Repository.Name)'
      releaseNotesFile: 'CHANGELOG.md'
      title: 'Release $(Build.SourceBranchName)'
      assets: '**/build/libs/*.jar'
      addChangeLog: false
