#####
# Creates a build including
# * Testing if it compiles
# * Tests run (extracting JUnit results)
# * Code quality with sonarcloud
# * Checks if artifacts (jar, sources, javadoc) can be built and signed
#####

parameters:
  vmImage: 'ubuntu-20.04'
  jdkVersion: '1.11'
  docker: 'false'

jobs:
- job: Build
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  - task: Gradle@2
    displayName: Compile
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'jar'
      options: '--info --stacktrace'
  - task: Gradle@2
    displayName: Run tests
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: 'x64'
      tasks: 'build'
      options: '--info --stacktrace'
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
  - ${{ if eq(parameters.docker, 'true') }}:
    - task: Gradle@2
      displayName: Build docker image
      inputs:
        gradleWrapperFile: 'gradlew'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: ${{ parameters.jdkVersion }}
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        tasks: 'jibBuildTar --image=bakdata/$(Build.Repository.Name):$(Build.BuildNumber) -x test'
        options: '--info'

    - publish: $(System.DefaultWorkingDirectory)/build/jib-image.tar
      artifact: tarImage
      displayName: Upload jib image
  - task: Gradle@2
    displayName: Assess code quality
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: 'x64'
      tasks: 'sonarqube'
      options: '-Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=bakdata --info --stacktrace'
    env:
      SONAR_TOKEN: $(sonar_token)
  - task: DownloadSecureFile@1
    inputs:
      secureFile: secring.gpg
  - task: Gradle@2
    displayName: Check if everything builds (incl. javadoc) for snapshot/release and signing works
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: 'x64'
      tasks: 'signSonatypePublication'
      options: '--info --stacktrace'
    env:
      SIGNING_SECRET_KEY_RING_FILE: $(Agent.TempDirectory)/secring.gpg 
      SIGNING_PASSWORD: $(signing.password)
      SIGNING_KEY_ID: $(signing.keyId)
